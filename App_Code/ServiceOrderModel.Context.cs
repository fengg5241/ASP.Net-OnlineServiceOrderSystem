//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;

public partial class ServiceOrderEntities : DbContext
{
    public ServiceOrderEntities()
        : base("name=ServiceOrderEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<Administartor> Administartor { get; set; }
    public DbSet<ContactUs> ContactUs { get; set; }
    public DbSet<Expert> Expert { get; set; }
    public DbSet<Order> Order { get; set; }
    public DbSet<OrderReview> OrderReview { get; set; }
    public DbSet<OrderTimeslot> OrderTimeslot { get; set; }
    public DbSet<Payment> Payment { get; set; }
    public DbSet<Service> Service { get; set; }
    public DbSet<ServiceTimeslot> ServiceTimeslot { get; set; }
    public DbSet<User> User { get; set; }
    public DbSet<UserAddress> UserAddress { get; set; }
    public DbSet<ServiceType> ServiceType { get; set; }
    public DbSet<UserPoint> UserPoint { get; set; }
    public DbSet<UserPointTranscation> UserPointTranscation { get; set; }
    public DbSet<OrderView> OrderView { get; set; }
    public DbSet<ServiceView> ServiceView { get; set; }
    public DbSet<DayOfWeek> DayOfWeek { get; set; }
    public DbSet<Timeslot> Timeslot { get; set; }

    public virtual ObjectResult<GetServiceTimeslot_Result> GetServiceTimeslot(Nullable<int> serviceId, Nullable<System.DateTime> date)
    {
        var serviceIdParameter = serviceId.HasValue ?
            new ObjectParameter("ServiceId", serviceId) :
            new ObjectParameter("ServiceId", typeof(int));

        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceTimeslot_Result>("GetServiceTimeslot", serviceIdParameter, dateParameter);
    }
}
